"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import configparser
from pathlib import Path

config = configparser.ConfigParser()
config.read(os.environ.get('CONFIG', 'config.cnf'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# APPS_DIR = os.path.join(BASE_DIR, 'src', 'apps')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gnt8h@vhaexv--fn_xv2@ab^-3e$(mfsn&2_lu_5txd7gr32h8'

# SECURITY WARNING: don't run with debug turned on in production!


APPEND_SLASH = False
DEBUG = True if config.get('settings', 'debug').lower() == 'true' else False
SESSION_COOKIE_SECURE = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_TRUSTED_ORIGINS = ['https://lending.socious.io',
                        'http://44.212.31.178/', 'http://localhost']

ALLOWED_HOSTS = [
    'lending.socious.io',
    'lending.dev.socious.io',
    'localhost'
]

LOGIN_URL = '/login'

with open('private_key.pem', 'r') as f:
    OIDC_RSA_PRIVATE_KEY = f.read()

# Application definition

AUTH_USER_MODEL = 'users.User'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # thirparty lbs
    # localapps
    'src.apps.site',
    'src.apps.users',
    'src.apps.projects',
]


MIDDLEWARE = [
    'src.middlewares.RemoveSlashMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'src.global.vars',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config.get('database', 'name'),
        'USER': config.get('database', 'user'),
        'PASSWORD': config.get('database', 'password'),
        'HOST': config.get('database', 'host'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'statics/'
STATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [BASE_DIR / 'statics']

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

BLOCKCHAIN_EXPELORER = config.get('crypto', 'expelorer')
BLOCKCHAIN_TOKENS = config.get('crypto', 'tokens').upper().split(',')
BLOCKCHAIN_CONTRACT = config.get('crypto', 'contract').upper()

DAPP_ENV = config.get('crypto', 'env') or 'mainet'

MEDIA_ROOT = os.path.join(BASE_DIR, 'photos')
MEDIA_URL = '/photos/'


PROOFSPACE_AUTH_REDIRECT_URL = config.get('proofspace_auth', 'redirect_url')
PROOFSPACE_AUTH_CLIENT_ID = config.get('proofspace_auth', 'client_id')
PROOFSPACE_AUTH_CLIENT_SECRET = config.get('proofspace_auth', 'client_secret')
PROOFSPACE_AUTH_URL = 'https://platform.proofspace.id/oauth2/token'
